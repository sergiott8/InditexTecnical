openapi: 3.0.0
info:
  title: SGA - Inditex
  description: API specification for Inditex technical test.
  version: 1.0.0
  contact:
    email: storres@paradigmadigital.com

servers:
  - url: http://localhost/

tags:
  - name: product
    description: Product search
    externalDocs:
      description: Learn more about our products
      url: https://www.inditex.com/en/home

paths:
  /price:
    get:
      tags:
        - Price
      summary: Find price between entry and exit dates with corresponding product
      description: Price found between entry and exit dates with corresponding product
      operationId: searchPriceProduct
      parameters:
        - name: entryDate
          in: query
          description: Product application date
          required: true
          schema:
            $ref: '#/components/schemas/DateTime'
        - name: productId
          in: query
          description: Product identifier
          required: true
          schema:
              $ref: '#/components/schemas/ProductId'
          example: 35515
        - name: brandId
          in: query
          description: Brand identifier
          required: true
          schema:
              $ref: '#/components/schemas/BrandId'
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/NotAllowed'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'

components:
  schemas:
    Price:
      type: object
      properties:
        productId:
          $ref: "#/components/schemas/ProductId"
        startDate:
          $ref: "#/components/schemas/DateTime"
        endDate:
          $ref: "#/components/schemas/DateTime"
        priceList:
          type: integer
        price:
          type: number
          format: double
        currency:
          type: string
          description: Currency. Could become an enum if more are added
          default: EUR
        brandId:
          $ref: "#/components/schemas/BrandId"
        priority:
          type: integer
          description: Price application disambiguator

    Product:
      type: object
      properties:
        productId:
          type: integer
          description: Product code identifier
        startDate:
          type: string
          format: date-time
          example: "2020-06-16T21:00:00"
        endDate:
          type: string
          format: date-time
          example: "2020-06-16T21:00:00"
        price:
          type: number
          format: double
        currency:
          type: string
          default: EUR
          description: Currency. Could become an enum if more are added
        brandId:
          type: integer
          description: Brand code identifier
        priority:
          type: integer
          description: Price application disambiguator
          
    BrandId:
      description: Identifier of the brand
      type: integer
      example: 1

    ProductId:
      description: Identifier of the product
      type: integer
      example: 35455

    DateTime:
      description: Date and time
      type: string
      format: date-time
      example: '2021-07-27T04:35:06.123Z'

    ErrorResponse:
      description: Common error response
      type: object
      properties:
        code:
          description: 'The error status code'
          type: integer
          format: int32
          minimum: 1
          example: 404
        title:
          description: 'A summarized sentence about the error'
          type: string
          maxLength: 256
          example: 'Error'
        description:
          description: Detailed information about the error
          type: string
          maxLength: 1024
          example: 'Error'
      required:
        - code
        - title
        - description
      additionalProperties: false

  responses:    
    BadRequest:
      description: 'Request contains incorrect syntax or cannot be processed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: 'The specified resource was not found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: 'Unauthorized'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotAllowed:
      description: 'Operation not allowed for current user'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Conflict:
      description: 'Conflict in the creation or updating of the resource'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unavailable:
      description: 'Error response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    GatewayTimeout:
      description: 'Gateway timeout error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'




externalDocs:
  description: Learn more about Inditex
  url: https://www.inditex.com/en/home